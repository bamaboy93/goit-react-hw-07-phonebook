{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/Form/Form.module.css","redux/actions.js","redux/operations.js","redux/selectors.js","Components/Form/Form.js","Components/ContactList/Contact.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","contactsOperations","fetchContacts","dispatch","a","actions","get","data","addContact","name","number","contact","post","deleteContact","id","delete","getContacts","state","contacts","items","getFilter","filter","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","includes","Form","useState","setName","setNumber","useDispatch","useSelector","inputChange","e","currentTarget","value","onSubmit","preventDefault","map","alert","operations","className","styles","input","type","onChange","pattern","title","required","btn","Contact","filteredContacts","useEffect","listItem","contactsBtn","onClick","onDeleteContact","ContactsList","list","Filter","placeholder","target","App","createReducer","_","action","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17e217ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2tkKy\",\"listItem\":\"ContactList_listItem__3kdW7\",\"contactsBtn\":\"ContactList_contactsBtn__1as42\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Form_name__CRU6c\",\"input\":\"Form_input__6i8O5\",\"btn\":\"Form_btn__2PlYy\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import axios from 'axios';\nimport * as actions from './actions';\n\naxios.defaults.baseURL = 'http://localhost:3001';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(actions.fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(actions.fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(actions.fetchContactsError(error));\n  }\n};\n\nconst addContact = (name, number) => async dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(actions.addContactRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', contact);\n    dispatch(actions.addContactSuccess(data));\n  } catch (error) {\n    dispatch(actions.addContactError(error));\n  }\n};\n\nconst deleteContact = id => async dispatch => {\n  dispatch(actions.deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${id}`);\n    dispatch(actions.deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(actions.deleteContactError(error));\n  }\n};\n\nconst contactsOperations = {\n  fetchContacts,\n  addContact,\n  deleteContact,\n};\n\nexport default contactsOperations;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport operations from '../../redux/operations';\nimport { getContacts } from '../../redux/selectors';\n\nimport styles from './Form.module.css';\nconst Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const inputChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const formSubmit = e => {\n    e.preventDefault();\n    setName('');\n    setNumber('');\n    if (!name || !number) return;\n\n    const contactName = contacts.map(contact => contact.name.toLowerCase());\n    if (contactName.includes(name.toLowerCase())) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(operations.addContact(name, number));\n  };\n\n  return (\n    <form onSubmit={formSubmit}>\n      <label className={styles.name}>\n        Name:\n        <input\n          className={styles.input}\n          type=\"text\"\n          onChange={inputChange}\n          value={name}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={styles.name}>\n        Number:\n        <input\n          className={styles.input}\n          type=\"tel\"\n          value={number}\n          onChange={inputChange}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button className={styles.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from 'react';\nimport operations from '../../redux/operations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport styles from './ContactList.module.css';\nimport { getFilteredContacts } from '../../redux/selectors';\n\nconst Contact = () => {\n  const onDeleteContact = id => dispatch(operations.deleteContact(id));\n  const filteredContacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(operations.fetchContacts()), [dispatch]);\n\n  return filteredContacts.map(({ id, name, number }) => {\n    return (\n      <li key={id} className={styles.listItem}>\n        {name}: {number}\n        <button\n          className={styles.contactsBtn}\n          onClick={() => onDeleteContact(id)}\n          type=\"button\"\n        >\n          Delete\n        </button>\n      </li>\n    );\n  });\n};\n\nexport default Contact;\n","import React from 'react';\n\nimport Contact from './Contact';\n\nimport styles from './ContactList.module.css';\n\nconst ContactsList = () => (\n  <ul className={styles.list}>\n    <Contact />\n  </ul>\n);\n\nexport default ContactsList;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/selectors';\nimport * as actions from '../../redux/actions';\n\nimport styles from '../Form/Form.module.css';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <input\n      className={styles.input}\n      type=\"text\"\n      value={value}\n      placeholder=\"Filter\"\n      onChange={e => dispatch(actions.changeFilter(e.target.value))}\n    />\n  );\n};\n\nexport default Filter;\n","import ContactForm from './Components/Form/Form';\nimport ContactsList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\n\nimport './App.css';\n\nexport default function App() {\n  return (\n    <div className=\"Container\">\n      <h1 className=\"title\">Phonebook</h1>\n      <ContactForm />\n      <h2 className=\"title\">Contacts</h2>\n      <Filter />\n      <ContactsList />\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './actions';\n\nconst items = createReducer([], {\n  [actions.fetchContactsSuccess]: (_, action) => action.payload,\n  [actions.addContactSuccess]: (state, action) => [...state, action.payload],\n  [actions.deleteContactSuccess]: (state, action) =>\n    state.filter(({ id }) => id !== action.payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport logger from 'redux-logger';\nimport contactsReducer from './reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\n\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}